{"version":3,"sources":["questions.js","strawhat.jpg","QuestionList.js","HomePage.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["questions","questionText","answerOptions","answerText","isCorrect","QuestionList","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","style","className","length","alt","src","logo","map","answerOption","i","onClick","nextQuestion","handleAnswerButtonClick","HomePage","to","Nav","href","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.329775ea.chunk.js","sourcesContent":["export const questions = [\r\n  {\r\n    questionText: `Who is Luffy's father`,\r\n    answerOptions: [\r\n      { answerText: 'Shanks', isCorrect: false },\r\n      { answerText: 'Buggy the Clown', isCorrect: false },\r\n      { answerText: 'Dragon', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText: `What is Whitebeard's devil fruit`,\r\n    answerOptions: [\r\n      { answerText: 'Gomu Gomu', isCorrect: false },\r\n      { answerText: 'Goru Goru', isCorrect: true },\r\n      { answerText: 'Op Op', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: `Who is Albasta Kingdom's Princess`,\r\n    answerOptions: [\r\n      { answerText: 'Vivi Nefetari', isCorrect: true },\r\n      { answerText: 'Shirahoshi', isCorrect: false },\r\n      { answerText: 'Boa Hancock', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: `Which of these is NOT Usopp's Nickname`,\r\n    answerOptions: [\r\n      { answerText: 'Sokeking', isCorrect: false },\r\n      { answerText: 'Captain Usopp', isCorrect: false },\r\n      { answerText: 'Pirate Hunter', isCorrect: true },\r\n    ]\r\n  },\r\n  {\r\n    questionText: `Who was Zoro's rival`,\r\n    answerOptions: [\r\n      { answerText: 'Luffy', isCorrect: false },\r\n      { answerText: 'Sanji', isCorrect: false },\r\n      { answerText: 'Kuina', isCorrect: true },\r\n    ]\r\n  }\r\n]\r\n\r\n/*{\r\n  question: 'Who is Gold Rogers son?',\r\n  options: ['Portgas D. Ace', 'Monkey D. Luffy', 'Sabo'],\r\n  isCorrect: [true, false, false]\r\n },\r\n {\r\n   question: 'Who killed Whitebeard?',\r\n   options: ['Admiral Sakazuki', 'Admiral Kizaru', 'Admiral Aokiji'],\r\n   isCorrect: [true, false, false]\r\n },\r\n {\r\n   question: 'Who is not a Younko?',\r\n   options: ['Big Mam', 'Kaidou', 'Zoro'],\r\n   isCorrect: [false, false, true]\r\n  }  */","export default __webpack_public_path__ + \"static/media/strawhat.a4a51d9b.jpg\";","import React, { useState } from 'react'\r\nimport {questions} from './questions'\r\nimport logo from './strawhat.jpg'\r\n\r\nexport default function QuestionList (){\r\n  const[currentQuestion, setCurrentQuestion] = useState(0)\r\n  const [showScore, setShowScore] = useState(false)\r\n  const[score, setScore] = useState(0)\r\n  const[style, setStyle] = useState('option-btn')\r\n\r\n  const handleAnswerButtonClick = (isCorrect) =>{\r\n    if(isCorrect){\r\n      setScore(score + 1)\r\n    }\r\n    const nextQuestion = currentQuestion +1\r\n    setCurrentQuestion(nextQuestion)\r\n    if(nextQuestion < questions.length){\r\n      setCurrentQuestion(nextQuestion)\r\n    }else{\r\n      setShowScore(true)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className='app'>\r\n    {showScore \r\n     ?<div className='score-sec container'>\r\n        Your Score \r\n        <div> {score}/{questions.length}</div>\r\n      </div>\r\n     :<div>\r\n        <div className='container'>\r\n          <img className='quiz-logo' alt='logo' src={logo} />\r\n          <div className='question-text'>\r\n          {questions[currentQuestion].questionText}?\r\n          </div>\r\n          <div>\r\n            {questions[currentQuestion].answerOptions.map((answerOption, i) =>{\r\n            return <button \r\n                    key={i}\r\n                    className={style}\r\n                    onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}>\r\n                    {answerOption.answerText}\r\n                    </button>\r\n            })}\r\n          </div>\r\n        </div>\r\n        </div>\r\n    }\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport logo from './strawhat.jpg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <div className='cover'>\r\n           <div className='cover-text'> Welcome to the One Piece Quiz</div>\r\n           <Link to='/quiz' className='link'>\r\n            <button className='home-btn'>Let's Go</button>\r\n           </Link>\r\n            <img className='home-logo' alt='logo' src={logo} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav className='sticky zone bg-blue'>\r\n          <ul className='main-nav'>\r\n           <li><a href='home'>One Piece</a></li>\r\n          </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport QuestionList from './QuestionList'\nimport HomePage from './HomePage'\nimport Nav from './Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nexport default function App (){\n \n  return(\n    <Router>\n    <div className='App'>\n      <Nav />\n        <Switch>\n          <Route path='/' exact component={HomePage} />\n          <Route path='/home' component={HomePage} />\n          <Route path='/quiz' component={QuestionList} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}